import Source;
extends Source;
init(config: Source.Config){
   super(config);
}

model Base {
    name: string,
    age: number
}

model Sub extends Base {
    name: string,
    code: string
}

model SubModel extends Source.Config {
    name: string,
}

@context('newModelsCtx')
async function newModels(): void {
    var s = new Sub{
        name = "str",
        code = "str",
        age = 123,
    };

    var sm = new SubModel{
        name = "str",
        maxAttemp = 32,
        maxRetry = 32,
    };

    var sc = new Source.Config{
        maxAttemp = 32,
        maxRetry = 32,
    };
}

api _request(): object {
    try {
        var in = 'try';
    } catch (e){
        var tmp = e.message;
    }
} returns {
    retry;
    return null;
} runtime {

}

function tryCatch(): void {
    try {
        var in = 'try';
    } catch (e){
        var tmp = e.message;
    }
}

function tryCatchWithReturn(): string {
    try {
        var in = 'try';
        return in;
    } catch (e){
        var tmp = e.message;
    }
    return '';
}
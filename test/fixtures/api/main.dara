model Config {
}

init(config: Config);

api hello(): void {
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    host = 'www.test.com',
  };
} returns {
  return;
}

api helloRuntime(): void {
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    host = 'www.test.com',
  };
  var test : map[string]any = null;
  test = {
    key = 'value',
  };
} returns {
  var testStr = getHost();
  return;
} runtime {

}


model M = {};
api helloVirtualCall(m: M): void {
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    key = '',
  };
} returns {
  return;
}

async function getHost() throws: string {
  return 'www.test.com';
}

api helloComplex(): any {
  var host = getHost();
  __request.method = 'GET';
  __request.pathname = '/';
  __request.headers = {
    host = host,
  };
  var test : map[string]any = null;
  test = {
    key = 'value',
  };
} returns {
  if(__response.statusCode != 200) {
    throw {
      code = `${__response.statusCode}`,
      message = `httpCode: ${__response.statusCode} `,
    };
  }
  var obj = $Stream.readAsJSON(__response.body);
  return obj;
} runtime {

}